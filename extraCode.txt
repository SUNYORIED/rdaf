else{
    const out = createConsiderations(topic[key]['@id'], topic['name'])
    const linkTopicToOutcome = makeLink(parentNode, out)
    out.prop('name/first', "Considerations")
    out.set('hidden', true)
    linkTopicToOutcome.set('hidden',true)
    linkTopicToOutcome.labels([{attrs:{text:{text: "Considerations"}}}])
    arr.push([out, linkTopicToOutcome])
  }



  function checkForSubTopics(outcome, arr, parentNode){
  if(outcome['description'] == undefined){
    duplicateFrame.forEach(nodes =>{
      if(nodes['@id'] == outcome){

        const subtopic = linkNodes(nodes, arr, parentNode, "Subtopic")
        return subtopic;
      }
    })
  }else{
    console.log(outcome['name'])
    const subtopic = linkNodes(outcome, arr, parentNode, "Subtopic")
    return subtopic;
  }
  const subtopic = linkNodes(outcome, arr, parentNode, "Subtopic")
  return subtopic;



  if(element.childNodes.button.id == "RDaF Subtopic"){
                const subtopicButton = element.$el[0]
                subtopicButton.addEventListener('mouseover', function() {
                    // Your mouseover event handling code here
                    var bbox = cellView.model.getBBox();
                    var paperRect1 = paper.localToPaperRect(bbox);
                    // Set the position of the element according to the pointer and make it visible
                    var testFind = document.getElementById(cellView.model.id)
                    console.log(testFind)
                    testFind.style.left = ((paperRect1.x) + 10) + 'px';
                    testFind.style.top = ((paperRect1.y) + 55) + 'px';
                    testFind.style.visibility = "visible"
                });
            }


if(cellView.model.attributes.NodeType['type'] == "Topics"){
            var tools = cellView._toolsView.tools
            tools.forEach(element =>{
                const outcomeButton = element.$el[0]
                outcomeButton.addEventListener('mouseover', function() {
                    // Set the position of the element according to the pointer and make it visible
                    var testFind = document.getElementById(cellView.model.id)
                    testFind.style.visibility = "hidden"
                })

            })
        }